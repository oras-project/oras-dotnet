### YamlMime:ManagedReference
items:
- uid: Oras.Interfaces.Registry.IRegistry
  commentId: T:Oras.Interfaces.Registry.IRegistry
  id: IRegistry
  parent: Oras.Interfaces.Registry
  children:
  - Oras.Interfaces.Registry.IRegistry.Repositories(System.String,System.Action{System.String[]},System.Threading.CancellationToken)
  - Oras.Interfaces.Registry.IRegistry.Repository(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IRegistry
  nameWithType: IRegistry
  fullName: Oras.Interfaces.Registry.IRegistry
  type: Interface
  source:
    remote:
      path: Oras/Interfaces/Registry/IRegistry.cs
      branch: add-docs
      repo: https://github.com/sammychinedu2ky/oras-dotnet.git
    id: IRegistry
    path: ../Oras/Interfaces/Registry/IRegistry.cs
    startLine: 6
  assemblies:
  - Oras
  namespace: Oras.Interfaces.Registry
  syntax:
    content: public interface IRegistry
    content.vb: Public Interface IRegistry
- uid: Oras.Interfaces.Registry.IRegistry.Repository(System.String,System.Threading.CancellationToken)
  commentId: M:Oras.Interfaces.Registry.IRegistry.Repository(System.String,System.Threading.CancellationToken)
  id: Repository(System.String,System.Threading.CancellationToken)
  parent: Oras.Interfaces.Registry.IRegistry
  langs:
  - csharp
  - vb
  name: Repository(string, CancellationToken)
  nameWithType: IRegistry.Repository(string, CancellationToken)
  fullName: Oras.Interfaces.Registry.IRegistry.Repository(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Oras/Interfaces/Registry/IRegistry.cs
      branch: add-docs
      repo: https://github.com/sammychinedu2ky/oras-dotnet.git
    id: Repository
    path: ../Oras/Interfaces/Registry/IRegistry.cs
    startLine: 14
  assemblies:
  - Oras
  namespace: Oras.Interfaces.Registry
  summary: Repository returns a repository reference by the given name.
  example: []
  syntax:
    content: Task<IRepository> Repository(string name, CancellationToken cancellationToken)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{Oras.Interfaces.Registry.IRepository}
      description: ''
    content.vb: Function Repository(name As String, cancellationToken As CancellationToken) As Task(Of IRepository)
  overload: Oras.Interfaces.Registry.IRegistry.Repository*
  nameWithType.vb: IRegistry.Repository(String, CancellationToken)
  fullName.vb: Oras.Interfaces.Registry.IRegistry.Repository(String, System.Threading.CancellationToken)
  name.vb: Repository(String, CancellationToken)
- uid: Oras.Interfaces.Registry.IRegistry.Repositories(System.String,System.Action{System.String[]},System.Threading.CancellationToken)
  commentId: M:Oras.Interfaces.Registry.IRegistry.Repositories(System.String,System.Action{System.String[]},System.Threading.CancellationToken)
  id: Repositories(System.String,System.Action{System.String[]},System.Threading.CancellationToken)
  parent: Oras.Interfaces.Registry.IRegistry
  langs:
  - csharp
  - vb
  name: Repositories(string, Action<string[]>, CancellationToken)
  nameWithType: IRegistry.Repositories(string, Action<string[]>, CancellationToken)
  fullName: Oras.Interfaces.Registry.IRegistry.Repositories(string, System.Action<string[]>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Oras/Interfaces/Registry/IRegistry.cs
      branch: add-docs
      repo: https://github.com/sammychinedu2ky/oras-dotnet.git
    id: Repositories
    path: ../Oras/Interfaces/Registry/IRegistry.cs
    startLine: 35
  assemblies:
  - Oras
  namespace: Oras.Interfaces.Registry
  summary: >-
    Repositories lists the name of repositories available in the registry.

    Since the returned repositories may be paginated by the underlying

    implementation, a function should be passed in to process the paginated

    repository list.

    `last` argument is the `last` parameter when invoking the catalog API.

    If `last` is NOT empty, the entries in the response start after the

    repo specified by `last`. Otherwise, the response starts from the top

    of the Repositories list.

    Note: When implemented by a remote registry, the catalog API is called.

    However, not all registries supports pagination or conforms the

    specification.

    Reference: https://docs.docker.com/registry/spec/api/#catalog

    See also `Repositories()` in this package.
  example: []
  syntax:
    content: Task Repositories(string last, Action<string[]> fn, CancellationToken cancellationToken)
    parameters:
    - id: last
      type: System.String
      description: ''
    - id: fn
      type: System.Action{System.String[]}
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function Repositories(last As String, fn As Action(Of String()), cancellationToken As CancellationToken) As Task
  overload: Oras.Interfaces.Registry.IRegistry.Repositories*
  nameWithType.vb: IRegistry.Repositories(String, Action(Of String()), CancellationToken)
  fullName.vb: Oras.Interfaces.Registry.IRegistry.Repositories(String, System.Action(Of String()), System.Threading.CancellationToken)
  name.vb: Repositories(String, Action(Of String()), CancellationToken)
references:
- uid: Oras.Interfaces.Registry
  commentId: N:Oras.Interfaces.Registry
  href: Oras.html
  name: Oras.Interfaces.Registry
  nameWithType: Oras.Interfaces.Registry
  fullName: Oras.Interfaces.Registry
  spec.csharp:
  - uid: Oras
    name: Oras
    href: Oras.html
  - name: .
  - uid: Oras.Interfaces
    name: Interfaces
    href: Oras.Interfaces.html
  - name: .
  - uid: Oras.Interfaces.Registry
    name: Registry
    href: Oras.Interfaces.Registry.html
  spec.vb:
  - uid: Oras
    name: Oras
    href: Oras.html
  - name: .
  - uid: Oras.Interfaces
    name: Interfaces
    href: Oras.Interfaces.html
  - name: .
  - uid: Oras.Interfaces.Registry
    name: Registry
    href: Oras.Interfaces.Registry.html
- uid: Oras.Interfaces.Registry.IRegistry.Repository*
  commentId: Overload:Oras.Interfaces.Registry.IRegistry.Repository
  href: Oras.Interfaces.Registry.IRegistry.html#Oras.Interfaces.Registry.IRegistry.Repository(System.String,System.Threading.CancellationToken)
  name: Repository
  nameWithType: IRegistry.Repository
  fullName: Oras.Interfaces.Registry.IRegistry.Repository
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Oras.Interfaces.Registry.IRepository}
  commentId: T:System.Threading.Tasks.Task{Oras.Interfaces.Registry.IRepository}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IRepository>
  nameWithType: Task<IRepository>
  fullName: System.Threading.Tasks.Task<Oras.Interfaces.Registry.IRepository>
  nameWithType.vb: Task(Of IRepository)
  fullName.vb: System.Threading.Tasks.Task(Of Oras.Interfaces.Registry.IRepository)
  name.vb: Task(Of IRepository)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Oras.Interfaces.Registry.IRepository
    name: IRepository
    href: Oras.Interfaces.Registry.IRepository.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Oras.Interfaces.Registry.IRepository
    name: IRepository
    href: Oras.Interfaces.Registry.IRepository.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Oras.Interfaces.Registry.IRegistry.Repositories*
  commentId: Overload:Oras.Interfaces.Registry.IRegistry.Repositories
  href: Oras.Interfaces.Registry.IRegistry.html#Oras.Interfaces.Registry.IRegistry.Repositories(System.String,System.Action{System.String[]},System.Threading.CancellationToken)
  name: Repositories
  nameWithType: IRegistry.Repositories
  fullName: Oras.Interfaces.Registry.IRegistry.Repositories
- uid: System.Action{System.String[]}
  commentId: T:System.Action{System.String[]}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<string[]>
  nameWithType: Action<string[]>
  fullName: System.Action<string[]>
  nameWithType.vb: Action(Of String())
  fullName.vb: System.Action(Of String())
  name.vb: Action(Of String())
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
